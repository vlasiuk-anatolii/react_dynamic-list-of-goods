{"version":3,"sources":["api/goods.ts","components/GoodList.tsx","App.tsx","index.tsx"],"names":["getAll","fetch","then","response","json","get5First","result","sort","foodA","foodB","name","localeCompare","slice","getRedGoods","color","filter","good","GoodList","goodsArr","className","map","item","style","id","App","useState","goods","setGoods","a","type","onClick","Allgoods","Five","Red","ReactDOM","render","document","getElementById"],"mappings":"sOAGaA,G,MAAS,WACpB,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,YAGlBC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAAAI,GAAM,OAAIA,EAAOC,MAAK,SAACC,EAAOC,GAClC,OACED,EAAME,KAAKC,cAAcF,EAAMC,SAEhCE,MAAM,EAAG,OAGHC,EAAc,SAACC,GAC1B,OAAOd,IACJE,MAAK,SAAAI,GAAM,OAAIA,EAAOS,QAAO,SAACC,GAAD,OAAeA,EAAKF,QAAUA,S,OCbnDG,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACvC,qBAAKC,UAAU,GAAf,SACE,6BACGD,EAASE,KAAI,SAAAC,GAAI,OAChB,oBAEEC,MAAO,CAAER,MAAM,GAAD,OAAKO,EAAKP,QAF1B,SAIGO,EAAKX,MAHDW,EAAKE,YCNPC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOC,EAAP,KAAcC,EAAd,KADiC,4CAGjC,sBAAAC,EAAA,kEACED,EADF,SACiB3B,IADjB,8EAHiC,kEAOjC,sBAAA4B,EAAA,kEACED,EADF,SACiBtB,IADjB,8EAPiC,kEAWjC,sBAAAuB,EAAA,kEACED,EADF,SACiBd,EAAY,OAD7B,8EAXiC,sBAejC,OACE,qCACE,cAAC,EAAD,CAAUK,SAAUQ,IACpB,wBACEG,KAAK,SACLC,QAAS,YApBkB,mCAqBzBC,IAHJ,uBAQA,wBACEF,KAAK,SACLC,QAAS,YA5BkB,mCA6BzBE,IAHJ,qBAQA,wBACEH,KAAK,SACLC,QAAS,YApCkB,mCAqCzBG,IAHJ,2BCpCNC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7241a37d.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport const getAll = (): Promise<Good[]> => {\n  return fetch(API_URL)\n    .then(response => response.json());\n};\n\nexport const get5First = (): Promise<Good[]> => {\n  return getAll()\n    .then(result => result.sort((foodA, foodB) => {\n      return (\n        foodA.name.localeCompare(foodB.name)\n      );\n    }).slice(0, 5));\n};\n\nexport const getRedGoods = (color: string): Promise<Good[]> => {\n  return getAll()\n    .then(result => result.filter((good:Good) => good.color === color));\n};\n","import React from 'react';\n\ninterface Props {\n  goodsArr: Good[];\n}\n\nexport const GoodList: React.FC<Props> = ({ goodsArr }) => (\n  <div className=\"\">\n    <ul>\n      {goodsArr.map(item => (\n        <li\n          key={item.id}\n          style={{ color: `${item.color}` }}\n        >\n          {item.name}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { GoodList } from './components/GoodList';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  async function Allgoods() {\n    setGoods(await getAll());\n  }\n\n  async function Five() {\n    setGoods(await get5First());\n  }\n\n  async function Red() {\n    setGoods(await getRedGoods('red'));\n  }\n\n  return (\n    <>\n      <GoodList goodsArr={goods} />\n      <button\n        type=\"button\"\n        onClick={() => {\n          Allgoods();\n        }}\n      >\n        All goods\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => {\n          Five();\n        }}\n      >\n        5 Goods\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => {\n          Red();\n        }}\n      >\n        Red Goods\n      </button>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}